services:
  app:
    profiles:
      - production
      - development

    restart: always
    build:
      dockerfile: ./Dockerfile
      context: ./app
      args:
        NODE_ENV: ${ENVIRONMENT}
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
        PORT: ${APP_PORT}

    ports:
      # NOTE: 80 is required for certbot ACME challenge
      - "80:80"
      - "443:${APP_PROXY_PORT}"

    # Allow certbot to wait on this container to be serving files
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost/healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 30

    volumes:
      - ${VOLUME_BASE_PATH}/app/prisma:/app/prisma
      - ${VOLUME_BASE_PATH}/certbot/volumes/etc/letsencrypt:/certbot/volumes/etc/letsencrypt
      - ${VOLUME_BASE_PATH}/certbot/volumes/var/www/html/.well-known:/app/client/.well-known

  db:
    profiles:
      - production
      - development

    restart: always
    build:
      dockerfile: ./Dockerfile
      context: ./db
      args:
        PORT: 3306
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_NAME: ${DATABASE_NAME}

    ports:
      - 3306:3306

    volumes:
      - ${VOLUME_BASE_PATH}/db/volumes/data:/var/lib/mysql

  phpmyadmin:
    profiles:
      - production
      - development

    restart: always
    build:
      dockerfile: ./Dockerfile
      context: ./phpmyadmin
      args:
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
        UPLOAD_LIMIT: 100G
        PORT: ${PHPMYADMIN_PORT}

    ports:
      - ${PHPMYADMIN_PORT}:${PHPMYADMIN_PORT}
      - 8080:80

    volumes:
      - ${VOLUME_BASE_PATH}/certbot/volumes/etc/letsencrypt:/etc/letsencrypt

  certbot:
    profiles:
      - production
      - development

    build:
      dockerfile: ./Dockerfile
      context: ./certbot
      args:
        CERTBOT_EMAIL: ${CERTBOT_EMAIL}
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
    # command: certonly -v -d "${PUBLIC_DOMAIN}" -d "www.${PUBLIC_DOMAIN}"

    # Wait on app to be serving files before starting, so the ACME challenge can work
    depends_on:
      app:
        condition: service_healthy

    volumes:
      - ${VOLUME_BASE_PATH}/certbot/volumes/var/lib/letsencrypt:/var/lib/letsencrypt
      - ${VOLUME_BASE_PATH}/certbot/volumes/etc/letsencrypt:/etc/letsencrypt
      - ${VOLUME_BASE_PATH}/certbot/volumes/var/www/html/.well-known:/var/www/html/.well-known

  certbot-self-signed:
    profiles:
      - production
      - development

    build:
      dockerfile: ./Dockerfile
      context: ./certbot-self-signed
      args:
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}

    volumes:
      - ${VOLUME_BASE_PATH}/certbot/volumes/etc/letsencrypt:/etc/letsencrypt
